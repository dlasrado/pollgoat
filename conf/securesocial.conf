smtp {
	host=smtp.gmail.com
	port=465
	ssl=true
	user="pollgoat@gmail.com"
	password=pollgoat123
	from="pollgoat@gmail.com"
}


securesocial {
	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that was received before authenticating the user
	#
	onLoginGoTo=/

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/
	
	onSignUpGoTo=/

	#
	# Enable SSL 
	#
	ssl=false	

	#
	# The controller class for assets. This is optional, only required
	# when you use a custom class for Assets.
	#
	#assetsController=controllers.ReverseMyCustomAssetsController

	 cookie {
            #name=id
            #path=/
            #domain=some_domain
            #httpOnly=true
            #idleTimeoutInMinutes=30
            #absoluteTimeoutInMinutes=720
            makeTransient=false
    }
       
    userpass {		
		withUserNameSupport=false
		sendWelcomeEmail=false
		enableGravatarSupport=true
		signupSkipLogin=true
		tokenDuration=60
		tokenDeleteInterval=5
		minimumPasswordLength=6
		enableTokenJob=true
		hasher=bcrypt
	}
	
	twitter {
		requestTokenUrl="https://twitter.com/oauth/request_token"
		accessTokenUrl="https://twitter.com/oauth/access_token"
		authorizationUrl="https://twitter.com/oauth/authenticate"
		consumerKey=your_consumer_key
		consumerSecret=your_consumer_secret
	}
	
	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
		# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
		scope=email
	}
	
	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId=your_client_id
		clientSecret=your_client_secret
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}
	
	linkedin {
		requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
		accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
		authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
		consumerKey=your_consumer_key
		consumerSecret=your_consumer_secret
	}
		
	instagram {
	    authorizationUrl="https://api.instagram.com/oauth/authorize"
	  	accessTokenUrl="https://api.instagram.com/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
	}
    
}


